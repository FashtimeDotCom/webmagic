{"name":"Webmagic","tagline":"一个网络爬虫工具包","body":"webmagic的发起源于工作中的需要，其定位是帮助开发者更便捷的开发一个垂直的网络爬虫。\r\n\r\nwebmagic的功能覆盖整个爬虫的生命周期(链接提取、页面下载、内容抽取、持久化)，开发者可以便捷的使用xpath和正则表达式进行链接和内容的提取，只需编写少量代码即可完成一个定制爬虫。\r\n\r\n#### 请注意\r\n\r\nwebmagic正处于开发阶段，目前还没有稳定版本。欢迎开发者参与到webmagic的试用和修改中来。 **如果只是想以外部jar包的方式，引用webmagic并进行自己的业务开发，建议你等待webmagic的第一个稳定版本。**\r\n\r\n###特色###\r\n\r\n* ####垂直爬虫####\r\n\twebmagic着重于页面抽取的工作。开发者可以使用xpath和正则表达式进行链接和内容的提取，支持链式API调用，以及单复数转换。\r\n\r\n\t\tString content = page.getHtml().x(\"//div[@class='body']\").r(\"这段话比较重要(.*)\").toString();\r\n\t\r\n* ####嵌入式&无配置####\r\n\twebmagic与其他Full-Stack的框架不同，没有配置文件，大部分功能都通过简单的API调用完成。webmagic以jar包的形式存在，并且不依赖任何框架，在程序可以随处进行调用。\r\n\r\n\t以下是爬取oschina博客的一段代码：\r\n\t\r\n\t\tSpider.me().processor(new SimplePageProcessor(\"http://my.oschina.net/\", \"http://my.oschina.net/*/blog/*\")).run();\r\n\t\t\r\n* ####可扩展####\r\n\t参考[`scrapy`](https://github.com/scrapy/scrapy)的设计，webmagic将爬虫的扩展点分为Processor、Schedular、Downloader、Pipeline三个模块，可以通过扩展这些接口实现强大的扩展功能。如可以通过多个Spider实现多线程抓取；可以通过扩展Schedular实现断点续传乃至于分布式爬虫；可以通过扩展Pipeline实现业务可定制的持久化功能。\r\n\r\n### 文档\r\n\r\n文档可参考[webmagic javadoc](http://code4craft.github.io/webmagic/docs)\r\n\r\n### 示例\r\n\r\n可参考作者博客[使用webmagic抓取页面并保存为wordpress文件](http://my.oschina.net/flashsword/blog/136846)\r\n\r\n### 协议\r\n\r\nwebmagic遵循[Apache 2.0协议](http://opensource.org/licenses/Apache-2.0)\r\n\r\n### 致谢\r\n\r\nwebmagic的架构和设计参考了以下两个项目，感谢以下两个项目的作者：\r\n\r\npython爬虫 **scrapy** [https://github.com/scrapy/scrapy](https://github.com/scrapy/scrapy)\r\n\r\nJava爬虫 **Spiderman** [https://gitcafe.com/laiweiwei/Spiderman](https://gitcafe.com/laiweiwei/Spiderman)","google":"UA-41279861-1","note":"Don't delete this file! It's used internally to help with page regeneration."}